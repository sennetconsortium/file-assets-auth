server {
    # Only root can listen on ports below 1024, we use higher-numbered ports
    # since nginx is running under non-root user hubmap
    listen 8080;

    server_name localhost;
    root /usr/share/nginx/html;

    # We need this logging for inspecting auth requests from other internal services
    # Logging to the mounted volume for outside container access
    access_log /usr/src/app/log/nginx_access_auth-server.log;
    error_log /usr/src/app/log/nginx_error_auth-server.log warn;

    location = /favicon.ico { access_log off; log_not_found off; }

    # Pass requests to the uWSGI server using the "uwsgi" protocol on port 5000
    location / {
        include uwsgi_params;
        # Use IP v4 "127.0.0.1" instead of "localhost" to avoid 502 error caused by DNS failure
        uwsgi_pass uwsgi://127.0.0.1:5000;
    }
}

server {
    # Only root can listen on ports below 1024, we use higher-numbered ports
    # since nginx is running under non-root user hubmap
    listen 8081;

    server_name localhost;
    root /Users/SLS325/codcc-dev-test/data-dev/assets;

    # We need this logging for inspecting auth requests from other internal services
    # Logging to the mounted volume for outside container access
    access_log /usr/src/app/log/nginx_access_assets-server.log;
    error_log /usr/src/app/log/nginx_error_assets-server.log warn;

    location = /favicon.ico { access_log off; log_not_found off; }

    location / {
        auth_request /file_auth;
        sendfile on;
        sendfile_max_chunk 2m;
        tcp_nopush on;
    }

    # Pass requests to the uWSGI server using the "uwsgi" protocol on port 5000
    location = /file_auth {
        internal;
        # Upstream file-assets authorizer
        proxy_pass http://130.49.179.105:8080/auth;
        # No need to send the POST body
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-Request-Method $request_method;
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header Host $proxy_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Authorization $http_authorization;
        proxy_pass_header Authorization;
    }
}